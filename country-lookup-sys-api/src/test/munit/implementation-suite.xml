<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="implementation_get-country-name-test-os" doc:id="68800b28-cf80-4f9f-971e-35888ba24f54" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock implementation-get-country-request" doc:id="f6589a13-1579-4910-a063-d01f8a66c582" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="7633937d-135b-479e-b3a2-1c48009b2009" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://implementationgetcountrynametestos\mock_payload.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://implementationgetcountrynametestos\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implementationgetcountrynametestos\mock_variable_.dwl')]" />
						<munit-tools:variable key="shippingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="billingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_2.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="countriesPayloadVar" value="#[output application/json --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_3.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="transactionId" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_4.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock Store - Countries Payload" doc:id="76312234-a436-4a29-9d0d-b2ff77e7f664" processor="os:store">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="e6e9b910-159c-49c7-bcf7-43f8c538a88a" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json  --- readUrl('classpath://implementationgetcountrynametestos\mock_payload1.dwl')]" mediaType="application/json " encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://implementationgetcountrynametestos\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implementationgetcountrynametestos\mock_variable_5.dwl')]" />
						<munit-tools:variable key="shippingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="billingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="countriesPayloadVar" value="#[output application/json --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="transactionId" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\mock_variable_9.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="96335ecf-9db0-45c7-8a0d-53880fafcdcb" >
				<munit:payload value="#[readUrl('classpath://implementationgetcountrynametestos\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://implementationgetcountrynametestos\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implementationgetcountrynametestos\set-event_variable_.dwl')]" />
					<munit:variable key="transactionId" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametestos\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to implementation_get-country-name" doc:id="bcd6a0ea-d832-4cdb-8c23-1b5b41a2b452" name="implementation_get-country-name"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="a7c38c1a-7541-48da-b318-17fe3eae6bdb" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implementationgetcountrynametestos::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="implementation_get-country-name-test" doc:id="76cdd968-05a0-4d15-85ff-be5a7f02582f" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Retrieve - Countries Payload" doc:id="eb8a3331-9767-49a8-b96d-b4c855ecd598" processor="os:retrieve">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a08e1d9c-e7e4-441b-9207-b3740ad095c7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://implementationgetcountrynametest\mock_payload1.dwl')]" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://implementationgetcountrynametest\mock_attributes1.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://implementationgetcountrynametest\mock_variable_5.dwl')]" />
						<munit-tools:variable key="shippingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametest\mock_variable_6.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="billingCountryIso" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametest\mock_variable_7.dwl')]" mediaType="application/java" encoding="UTF-8" />
						<munit-tools:variable key="countriesPayloadVar" value="#[output application/json --- readUrl('classpath://implementationgetcountrynametest\mock_variable_8.dwl')]" mediaType="application/json" encoding="UTF-8" />
						<munit-tools:variable key="transactionId" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametest\mock_variable_9.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="dac0261b-2394-49fa-871e-901965ed6e39" >
				<munit:payload value="#[readUrl('classpath://implementationgetcountrynametest\set-event_payload1.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://implementationgetcountrynametest\set-event_attributes1.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://implementationgetcountrynametest\set-event_variable_2.dwl')]" />
					<munit:variable key="transactionId" value="#[output application/java --- readUrl('classpath://implementationgetcountrynametest\set-event_variable_3.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to implementation_get-country-name" doc:id="6c4e4706-3e17-4eb0-9688-8138fed2df57" name="implementation_get-country-name"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="b6df424c-2f66-412b-8d59-5002874e3247" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import implementationgetcountrynametest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
